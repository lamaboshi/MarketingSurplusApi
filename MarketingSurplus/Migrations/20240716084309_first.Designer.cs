// <auto-generated />
using System;
using MarketingSurplus.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketingSurplus.Migrations
{
    [DbContext(typeof(MarketingSurplusDbContext))]
    [Migration("20240716084309_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketingSurplus.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderProductId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Note = "  Welcom to you",
                            OrderProductId = 4,
                            OrderStatusId = 1
                        },
                        new
                        {
                            Id = 21,
                            Note = " Welcom to you",
                            OrderProductId = 2,
                            OrderStatusId = 1
                        },
                        new
                        {
                            Id = 22,
                            Note = " Welcom to you",
                            OrderProductId = 2,
                            OrderStatusId = 2
                        },
                        new
                        {
                            Id = 23,
                            Note = " Welcom to you",
                            OrderProductId = 1,
                            OrderStatusId = 1
                        },
                        new
                        {
                            Id = 24,
                            Note = " Welcom to you",
                            OrderProductId = 3,
                            OrderStatusId = 1
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Charity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociationLicense")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlineImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TargetGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAccept")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Charities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Al Hamadanieh",
                            AssociationLicense = "2435",
                            Email = "Al-Ihsan@test.com",
                            Goals = "childern",
                            Name = "Al-Ihsan",
                            OnlineImage = "https://i.ibb.co/Z6GHm9w/banner.png",
                            Password = "Al-Ihsan789",
                            Phone = "0215789147",
                            TargetGroup = "Rich Pepole",
                            isAccept = false
                        },
                        new
                        {
                            Id = 2,
                            Address = "Al mohafaza",
                            AssociationLicense = "2435",
                            Email = "Hand-By-Hand@test.com",
                            Goals = "Old Pepole",
                            Name = "Hand By Hand",
                            OnlineImage = "https://i.ibb.co/CH67mMZ/9ba9d0086cff0ceb5155420e01fda24e.jpg",
                            Password = "Hand-By-Hand456",
                            Phone = "0215117894",
                            TargetGroup = "Rich Pepole",
                            isAccept = false
                        },
                        new
                        {
                            Id = 3,
                            Address = "Mohamad Fares Street",
                            AssociationLicense = "2435",
                            Email = "Al-Noor@test.com",
                            Goals = "childern",
                            Name = "Al-Noor",
                            OnlineImage = "https://i.ibb.co/7GY0Qvs/al-nour.jpg",
                            Password = "Al-Noor123",
                            Phone = "021524895 ",
                            TargetGroup = "Rich Pepole",
                            isAccept = false
                        },
                        new
                        {
                            Id = 4,
                            Address = "Al Azizeh",
                            AssociationLicense = "2435",
                            Email = "George@test.com",
                            Goals = "childern",
                            Name = "George",
                            OnlineImage = "https://i.ibb.co/HpFwRsc/259490784-888270292057739-1584770156068076983-n-300x378.png",
                            Password = "George147",
                            Phone = "0215115827",
                            TargetGroup = "Rich Pepole",
                            isAccept = false
                        },
                        new
                        {
                            Id = 5,
                            Address = "Al Marterni",
                            AssociationLicense = "2435",
                            Email = "Namaa@test.com",
                            Goals = "childern",
                            Name = "Namaa",
                            OnlineImage = "https://i.ibb.co/rwW5L3G/namma.jpg",
                            Password = "Namaa369",
                            Phone = "02151174369",
                            TargetGroup = "Rich Pepole",
                            isAccept = false
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlineImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAccept")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "From Streat",
                            CompanyTypeId = 1,
                            Description = "As in 1955, when Ultra Medica started its ascent in the world of pharmaceutical industry in Syria (Sednaya) founded with emphasis activities and enthusiasm for the manufacturing and developing of life science industry",
                            Email = "UltraMedica@test.com",
                            LicenseNumber = "242523",
                            Name = "Ultra Medica",
                            OnlineImage = "https://i.ibb.co/z4vNrPc/company-1.png",
                            Password = "12123",
                            Phone = "0921423432",
                            TelePhone = "4232543",
                            isAccept = false
                        },
                        new
                        {
                            Id = 2,
                            Address = "From Streat",
                            CompanyTypeId = 1,
                            Description = "Newpharma is een online apotheek, een uitbreiding van een echte apotheek, gevestigd in België. We spreken ook van internet apotheek of e-apotheek.",
                            Email = "newpharma@test.com",
                            Name = "New pharma",
                            OnlineImage = " https://i.ibb.co/yPnHycP/company-2.png",
                            Password = "12123",
                            Phone = "0921423432",
                            TelePhone = "4232543",
                            isAccept = false
                        },
                        new
                        {
                            Id = 3,
                            Address = "From Streat",
                            CompanyTypeId = 2,
                            Description = "Max Fashion is an Indian fashion brand under the banner of the Landmark Group in Dubai",
                            Email = "MAX@test.com",
                            LicenseNumber = "242523",
                            Name = "MAX",
                            OnlineImage = "https://i.ibb.co/9ptGtb1/max-fashion-india-logo.jpg",
                            Password = "111222",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 4,
                            Address = "From Streat",
                            CompanyTypeId = 2,
                            Description = "It is an Italian luxury fashion house specializing in ready-to-wear and haute couture, headquartered in Milan, Italy. Expanded to design raincoats, windbreakers, knitwear, leather goods, shoes, perfume, and accessories",
                            Email = "MONCLER@test.com",
                            LicenseNumber = "242523",
                            Name = "MONCLER",
                            OnlineImage = "https://i.ibb.co/0fmgNQL/download.png",
                            Password = "6789",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 5,
                            Address = "From Streat",
                            CompanyTypeId = 3,
                            Description = "A clothing retailer, the company specializes in fast fashion, and its products include apparel, accessories, footwear, swimwear, cosmetics, and perfume. It is one of the largest clothing retailers in the world which also includes brands such as Bershka and Massimo Dutti.",
                            Email = "ZARA@test.com",
                            LicenseNumber = "242523",
                            Name = "ZARA",
                            OnlineImage = "https://i.ibb.co/KXYZN1b/Zara-Logo-svg.png",
                            Password = "0909",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 6,
                            Address = "From Streat",
                            CompanyTypeId = 3,
                            Description = "A clothing retailer, the company specializes in fast fashion, and its products include apparel, accessories, footwear, swimwear, cosmetics, and perfume. It is one of the largest clothing retailers in the world which also includes brands such as Bershka and Massimo Dutti.",
                            Email = "ZARA@test.com",
                            LicenseNumber = "242523",
                            Name = "LC",
                            OnlineImage = "https://i.ibb.co/KXYZN1b/Zara-Logo-svg.png",
                            Password = "0909",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 7,
                            Address = "Louisville, KentuckyFrom Streat",
                            CompanyTypeId = 4,
                            Description = "Kentucky Fried Chicken or KFC is a chain of fast food restaurants that specializes primarily in fried chicken.  It is the second largest chain of fast food restaurants in the world in terms of sales after McDonald's. Kentucky Fried Chicken has nearly twenty thousand branches spread over 123 countries and territories around the world.",
                            Email = "KFC@test.com",
                            LicenseNumber = "242523",
                            Name = "KFC",
                            OnlineImage = "https://i.ibb.co/30ggCjY/download-2.png",
                            Password = "5252",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 8,
                            Address = "From Streat",
                            CompanyTypeId = 4,
                            Description = "Pizza Hut is an American multinational restaurant chain and international franchise founded in 1958 in Wichita, Kansas by Dan and Frank Carney. They serve their signature pan pizza and other dishes including pasta, breadsticks and desserts.",
                            Email = "PIZZAHUT@test.com",
                            LicenseNumber = "242523",
                            Name = "PIZZA HUT",
                            OnlineImage = "https://i.ibb.co/wB3sWFC/cmopany-20.png",
                            Password = "34345",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 9,
                            Address = "Suwon, South Korea",
                            CompanyTypeId = 5,
                            Description = " Samsung Electronics is the world's largest electronics and information technology company.  Samsung Electronics is part of the Samsung Group, which is the largest conglomerate in South Korea and the global market leader with more than 60 products including semiconductors such as DRAM and flash memory, digital display devices such as liquid crystal TVs  LCD and plasma, consumer electronics such as DVD players, mobile phones, digital cameras and laser printers, household appliances such as refrigerators, microwaves and dishwashers.",
                            Email = "SAMSUNG@test.com",
                            LicenseNumber = "242523",
                            Name = "SAMSUNG",
                            OnlineImage = "https://i.ibb.co/fNGbPdT/Samsung.png",
                            Password = "111222",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 10,
                            Address = "Cupertino, California, United States",
                            CompanyTypeId = 5,
                            Description = "The Apple Corporation is an American multinational technology company specializing in consumer electronics, software and online services.  It is one of the top five American IT companies",
                            Email = "APPLE@test.com",
                            LicenseNumber = "242523",
                            Name = "APPLE",
                            OnlineImage = "https://i.ibb.co/pzcm1C3/Apple.png",
                            Password = "77666",
                            Phone = "0921423432",
                            TelePhone = "223554",
                            isAccept = false
                        },
                        new
                        {
                            Id = 11,
                            Address = "USA",
                            CompanyTypeId = 6,
                            Description = "",
                            Email = "Prada@test.com",
                            LicenseNumber = "242004",
                            Name = "Prada",
                            OnlineImage = "https://i.ibb.co/NyNdVrN/prada.png",
                            Password = "88810",
                            Phone = "002875432",
                            TelePhone = "242004",
                            isAccept = false
                        },
                        new
                        {
                            Id = 12,
                            Address = "Germany",
                            CompanyTypeId = 6,
                            Description = "",
                            Email = "Calvin_Klein@test.com",
                            LicenseNumber = "203010",
                            Name = "Calvin Klein",
                            OnlineImage = "https://i.ibb.co/4pN0wbw/Calvin-Klein-Logo.png",
                            Password = "87000",
                            Phone = "002100572",
                            TelePhone = "203010",
                            isAccept = false
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyMethods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PayMethodId");

                    b.ToTable("CompanyMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            PayMethodId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            PayMethodId = 3
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            PayMethodId = 2
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4,
                            PayMethodId = 1
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 5,
                            PayMethodId = 3
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 6,
                            PayMethodId = 2
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 7,
                            PayMethodId = 2
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 9,
                            PayMethodId = 1
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 9,
                            PayMethodId = 1
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 10,
                            PayMethodId = 2
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 11,
                            PayMethodId = 3
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 12,
                            PayMethodId = 2
                        },
                        new
                        {
                            Id = 13,
                            CompanyId = 7,
                            PayMethodId = 1
                        },
                        new
                        {
                            Id = 14,
                            CompanyId = 9,
                            PayMethodId = 3
                        },
                        new
                        {
                            Id = 15,
                            CompanyId = 11,
                            PayMethodId = 3
                        },
                        new
                        {
                            Id = 16,
                            CompanyId = 4,
                            PayMethodId = 1
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("Favor")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("CompanyProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10,
                            CompanyId = 1,
                            Favor = false,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10,
                            CompanyId = 1,
                            Favor = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 10,
                            CompanyId = 1,
                            Favor = false,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 10,
                            CompanyId = 2,
                            Favor = false,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 10,
                            CompanyId = 2,
                            Favor = false,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            Amount = 10,
                            CompanyId = 2,
                            Favor = false,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            Amount = 10,
                            CompanyId = 3,
                            Favor = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            Amount = 10,
                            CompanyId = 3,
                            Favor = false,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            Amount = 10,
                            CompanyId = 3,
                            Favor = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            Amount = 10,
                            CompanyId = 4,
                            Favor = false,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            Amount = 10,
                            CompanyId = 4,
                            Favor = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            Amount = 10,
                            CompanyId = 4,
                            Favor = false,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            Amount = 10,
                            CompanyId = 5,
                            Favor = false,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            Amount = 10,
                            CompanyId = 5,
                            Favor = false,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            Amount = 10,
                            CompanyId = 5,
                            Favor = false,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            Amount = 10,
                            CompanyId = 6,
                            Favor = false,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            Amount = 10,
                            CompanyId = 6,
                            Favor = false,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            Amount = 10,
                            CompanyId = 6,
                            Favor = false,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            Amount = 10,
                            CompanyId = 7,
                            Favor = false,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            Amount = 10,
                            CompanyId = 7,
                            Favor = false,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            Amount = 10,
                            CompanyId = 7,
                            Favor = false,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            Amount = 10,
                            CompanyId = 8,
                            Favor = false,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            Amount = 10,
                            CompanyId = 8,
                            Favor = false,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            Amount = 10,
                            CompanyId = 8,
                            Favor = false,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            Amount = 10,
                            CompanyId = 9,
                            Favor = false,
                            ProductId = 25
                        },
                        new
                        {
                            Id = 26,
                            Amount = 10,
                            CompanyId = 9,
                            Favor = false,
                            ProductId = 26
                        },
                        new
                        {
                            Id = 27,
                            Amount = 10,
                            CompanyId = 9,
                            Favor = false,
                            ProductId = 27
                        },
                        new
                        {
                            Id = 28,
                            Amount = 10,
                            CompanyId = 10,
                            Favor = false,
                            ProductId = 28
                        },
                        new
                        {
                            Id = 29,
                            Amount = 10,
                            CompanyId = 10,
                            Favor = false,
                            ProductId = 29
                        },
                        new
                        {
                            Id = 30,
                            Amount = 10,
                            CompanyId = 10,
                            Favor = false,
                            ProductId = 30
                        },
                        new
                        {
                            Id = 31,
                            Amount = 10,
                            CompanyId = 11,
                            Favor = false,
                            ProductId = 31
                        },
                        new
                        {
                            Id = 32,
                            Amount = 11,
                            CompanyId = 11,
                            Favor = false,
                            ProductId = 32
                        },
                        new
                        {
                            Id = 33,
                            Amount = 10,
                            CompanyId = 11,
                            Favor = false,
                            ProductId = 33
                        },
                        new
                        {
                            Id = 34,
                            Amount = 10,
                            CompanyId = 12,
                            Favor = false,
                            ProductId = 34
                        },
                        new
                        {
                            Id = 35,
                            Amount = 10,
                            CompanyId = 12,
                            Favor = false,
                            ProductId = 35
                        },
                        new
                        {
                            Id = 36,
                            Amount = 10,
                            CompanyId = 12,
                            Favor = false,
                            ProductId = 36
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAccept")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All About Medicines",
                            TypeName = "Medicines",
                            isAccept = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "All About sports",
                            TypeName = "Sports",
                            isAccept = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "All About Clothes",
                            TypeName = "Clothes",
                            isAccept = false
                        },
                        new
                        {
                            Id = 4,
                            Description = "All About Food",
                            TypeName = "Food",
                            isAccept = false
                        },
                        new
                        {
                            Id = 5,
                            Description = "All About electronics",
                            TypeName = "Electronics",
                            isAccept = false
                        },
                        new
                        {
                            Id = 6,
                            Description = "All About Perfumes",
                            TypeName = "Perfumes",
                            isAccept = false
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharityId")
                        .HasColumnType("int");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("int");

                    b.Property<float>("PricePay")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CharityId");

                    b.HasIndex("OrderTypeId");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharityId = 1,
                            OrderTypeId = 3,
                            PricePay = 20000f
                        },
                        new
                        {
                            Id = 2,
                            CharityId = 2,
                            OrderTypeId = 2,
                            PricePay = 18000f
                        },
                        new
                        {
                            Id = 3,
                            CharityId = 4,
                            OrderTypeId = 2,
                            PricePay = 11000f
                        },
                        new
                        {
                            Id = 4,
                            CharityId = 2,
                            OrderTypeId = 3,
                            PricePay = 10000f
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Evalution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RateId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RateId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Evalution");

                    b.HasData(
                        new
                        {
                            Id = 30,
                            RateId = 4,
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 31,
                            RateId = 5,
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 32,
                            RateId = 2,
                            SubscriptionId = 2
                        },
                        new
                        {
                            Id = 33,
                            RateId = 3,
                            SubscriptionId = 3
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Descripation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10,
                            Descripation = "The order was placed at 3:05 and will expire after a quarter of an hour from this time ",
                            IsDelivery = true,
                            Name = "Order 1",
                            Price = 20000f,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 5,
                            Descripation = "The order was placed at 2:50 and will expire after a quarter of an hour from this time",
                            IsDelivery = false,
                            Name = "Order 2",
                            Price = 18520f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 6,
                            Descripation = "The order was placed at 4:40 and will expire after a quarter of an hour from this time",
                            IsDelivery = true,
                            Name = "Order 3",
                            Price = 75312f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 4,
                            Descripation = "The order was placed at 3:20 and will expire after a quarter of an hour from this time",
                            IsDelivery = true,
                            Name = "Order 4",
                            Price = 12457f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Amount = 2,
                            Descripation = "The order was placed at 1:15 and will expire after a quarter of an hour from this time",
                            IsDelivery = false,
                            Name = "Order 5",
                            Price = 45632f,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CompanyProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 5,
                            CompanyProductId = 4,
                            OrderId = 3,
                            TotalPrice = 11000
                        },
                        new
                        {
                            Id = 2,
                            Amount = 4,
                            CompanyProductId = 3,
                            OrderId = 5,
                            TotalPrice = 120000
                        },
                        new
                        {
                            Id = 3,
                            Amount = 9,
                            CompanyProductId = 1,
                            OrderId = 1,
                            TotalPrice = 480000
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100,
                            CompanyProductId = 2,
                            OrderId = 4,
                            TotalPrice = 500000
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 7, 16, 11, 43, 8, 545, DateTimeKind.Local).AddTicks(9372),
                            status = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 7, 16, 11, 43, 8, 545, DateTimeKind.Local).AddTicks(9406),
                            status = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2024, 7, 16, 11, 43, 8, 545, DateTimeKind.Local).AddTicks(9422),
                            status = 3
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2024, 7, 16, 11, 43, 8, 545, DateTimeKind.Local).AddTicks(9437),
                            status = 4
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Percentage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Donation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charity Organization"
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.PayMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PayMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cash Pay"
                        },
                        new
                        {
                            Id = 2,
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Credit Card"
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsExpiration")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewPrice")
                        .HasColumnType("real");

                    b.Property<float>("OldPrice")
                        .HasColumnType("real");

                    b.Property<string>("OnlineImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Flamix is ​​a medicine that contains celecoxib as an active ingredient, and it is considered a non-steroidal anti-infl ammatory drug",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Newflamix",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/xjS4yyL/Flamix2040020mg20film20tablete203-D.jpg"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Moderate pain relief without the need for a prescription",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "New Profin",
                            NewPrice = 6000f,
                            OldPrice = 9000f,
                            OnlineImage = "https://i.ibb.co/yykJXSj/product-1.jpg"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Clomiphene is used to treat some cases of infertility in women",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "Newclomiphene",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/kHFv6Yd/clomiphene-swiss-remedies.jpg"
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Broad spectrum antibiotics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "Newthyromax",
                            NewPrice = 25000f,
                            OldPrice = 30000f,
                            OnlineImage = "https://i.ibb.co/crzLHnW/thyromaxx-50-kaps-za-normalnu-funkciju-titnja-e-bi-5fb8d11c86db5.jpg"
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "To treat depression",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "Newsertraline",
                            NewPrice = 30000f,
                            OldPrice = 33000f,
                            OnlineImage = "https://i.ibb.co/Fw53mry/0ceba66d9685fed081df064b3a30469b.webp"
                        },
                        new
                        {
                            Id = 6,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Anti-hyperglycemic",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "Newmetformin",
                            NewPrice = 8500f,
                            OldPrice = 10000f,
                            OnlineImage = "https://i.ibb.co/9qMw6yK/Njm9e5-KQez-GBFw-YRja-Tkb-C-1200-80.jpg"
                        },
                        new
                        {
                            Id = 7,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Size 33",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Spedrin",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/my2mYtr/Hff44c1c4dc104fc19a29e4f1d8fe5b96p-jpg-720x720q50.webp"
                        },
                        new
                        {
                            Id = 8,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Sportswear",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/7tjQZK6/https-hypebeast-com-image-2016-06-hm-sports-performance-collection-0.jpg"
                        },
                        new
                        {
                            Id = 9,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Sportswear",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/Pr32t0X/2022-1-1.jpg"
                        },
                        new
                        {
                            Id = 10,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Comfortable cotton",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Shorts",
                            NewPrice = 50000f,
                            OldPrice = 75000f,
                            OnlineImage = "https://i.ibb.co/F4zR55N/bdd3cef4-0e9b-4be4-b11a-1f45aaaee12d-thumbnail-770x770.png"
                        },
                        new
                        {
                            Id = 11,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Free Size",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Dress",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/bdghtwQ/sefamerve-gri-tesettur-elbise-bwst8238-01-3316251535974586797-1-752x1152.jpg"
                        },
                        new
                        {
                            Id = 12,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "for sea",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Sport hat",
                            NewPrice = 50000f,
                            OldPrice = 75000f,
                            OnlineImage = "https://i.ibb.co/cyVGNs4/1.jpg"
                        },
                        new
                        {
                            Id = 13,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Free Size",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Bloues",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/wK9h3yd/1hoxd-AGYSt-Sp9-BCyq-XWP2vc-LRky-Pz-Bz-N5n-Ga-J5ad.jpg"
                        },
                        new
                        {
                            Id = 14,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Free Size",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " pants",
                            NewPrice = 135000f,
                            OldPrice = 155000f,
                            OnlineImage = "https://i.ibb.co/Gnsr6w5/w1020-q80.jpg"
                        },
                        new
                        {
                            Id = 15,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "mam jeans",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " jeans",
                            NewPrice = 135000f,
                            OldPrice = 155000f,
                            OnlineImage = "https://i.ibb.co/xYNdXJ2/4b1d26be-d7dc-4056-bc63-39e30c160b7d.jpg"
                        },
                        new
                        {
                            Id = 16,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Free Size",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Dress",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/YdBdM5m/16226197718.jpg"
                        },
                        new
                        {
                            Id = 17,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Size 37",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Qandara",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = "https://i.ibb.co/w7C1nJ2/31-AJD92clx-L-AC-SY780.jpg"
                        },
                        new
                        {
                            Id = 18,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Color off white",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Wedding Suit",
                            NewPrice = 13000f,
                            OldPrice = 15000f,
                            OnlineImage = ""
                        },
                        new
                        {
                            Id = 19,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Broasted",
                            NewPrice = 200000f,
                            OldPrice = 250000f,
                            OnlineImage = "https://i.ibb.co/HPdCsJk/image.jpg"
                        },
                        new
                        {
                            Id = 20,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Shawrama",
                            NewPrice = 175000f,
                            OldPrice = 200000f,
                            OnlineImage = "https://i.ibb.co/RvpbMr3/8a13a1a95c8f094fe07b6e8c218fb6c2.jpg"
                        },
                        new
                        {
                            Id = 21,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Grilled Chicken",
                            NewPrice = 20000f,
                            OldPrice = 25000f,
                            OnlineImage = "https://i.ibb.co/f1k26g7/png-transparent-roast-chicken-barbecue-chicken-roasting-chicken-meat-roast-chicken-food-animals-baki.png"
                        },
                        new
                        {
                            Id = 22,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Nugget",
                            NewPrice = 50000f,
                            OldPrice = 75000f,
                            OnlineImage = "https://i.ibb.co/BgtCXnq/Nuggets.gif"
                        },
                        new
                        {
                            Id = 23,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " pizza ",
                            NewPrice = 200000f,
                            OldPrice = 250000f,
                            OnlineImage = "https://i.ibb.co/YQXBmKb/66951-7.jpg"
                        },
                        new
                        {
                            Id = 24,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Taza, hot, delicious",
                            Expiration = new DateTime(2024, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " salmey pizza",
                            NewPrice = 175000f,
                            OldPrice = 200000f,
                            OnlineImage = "https://i.ibb.co/qrfSxXs/Q2-HGj-Nd-Babm7-S2n-FA.jpg"
                        },
                        new
                        {
                            Id = 25,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Smart washing machine",
                            NewPrice = 50000f,
                            OldPrice = 75000f,
                            OnlineImage = "https://i.ibb.co/Bcg2rCQ/ae-ar-WF1702-WEU-XSG-001-Front-624-624-PNG.png"
                        },
                        new
                        {
                            Id = 26,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Camera",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/W3Wvh7k/2d257668b46d3cd5be228192fd02876f-fmt-pjpeg-res-Mode-bisharp-wid-354.jpg"
                        },
                        new
                        {
                            Id = 27,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Mobile",
                            NewPrice = 175000f,
                            OldPrice = 20000f,
                            OnlineImage = "https://i.ibb.co/BVY7rPz/eg-galaxy-s24-s928-sm-s928bztcmea-thumb-539296161-344-344-PNG.png"
                        },
                        new
                        {
                            Id = 28,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " smart watch",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/VqCwH1C/61tp47u-ZRl-L-AC-UF1000-1000-QL80.jpg"
                        },
                        new
                        {
                            Id = 29,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "tap",
                            NewPrice = 25000f,
                            OldPrice = 30000f,
                            OnlineImage = "https://i.ibb.co/YhFVJvr/716o8-NCsj-DL-AC-UF894-1000-QL80.jpg"
                        },
                        new
                        {
                            Id = 30,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Everything about the world of electronics",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "refrigerator",
                            NewPrice = 230000f,
                            OldPrice = 255000f,
                            OnlineImage = "https://i.ibb.co/0qv7MX7/toshiba-refrigerator-no-frost-11-feet-silver-gr-ef31-s.jpg"
                        },
                        new
                        {
                            Id = 31,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = " Floral Perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Chanel No.5",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/cCZZdrz/coco-mademoiselle-eau-de-parfum-intense-spray-3-4fl-oz-packshot-default-116660-9539148283934.png"
                        },
                        new
                        {
                            Id = 32,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Oriental perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Tommy Hilfiger for Men ",
                            NewPrice = 175000f,
                            OldPrice = 20000f,
                            OnlineImage = "https://i.ibb.co/QKvKKCw/91-D0-TXi2or-L.jpg"
                        },
                        new
                        {
                            Id = 33,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Woody Perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Giorgio Armani",
                            NewPrice = 130000f,
                            OldPrice = 150000f,
                            OnlineImage = "https://i.ibb.co/k38SvS0/517wv-Qgc-H0-L-AC-UF1000-1000-QL80.jpg"
                        },
                        new
                        {
                            Id = 34,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Citrus Perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " Dolce & Gabbana Light Blue",
                            NewPrice = 25000f,
                            OldPrice = 30000f,
                            OnlineImage = "https://i.ibb.co/8P2b254/miswag-Yf-M4c-AYMy-G4-U.jpg"
                        },
                        new
                        {
                            Id = 35,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Amber Perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = "Bvlgari Black",
                            NewPrice = 230000f,
                            OldPrice = 255000f,
                            OnlineImage = "https://i.ibb.co/X2Jhj99/Espcuc-FNv-Rg-Mn-Zucl-JFIeyq-LZ3adeu-D6-NPq-UTr44.png"
                        },
                        new
                        {
                            Id = 36,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descripation = "Citrus Perfumes",
                            Expiration = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsExpiration = false,
                            Name = " 212",
                            NewPrice = 25000f,
                            OldPrice = 30000f,
                            OnlineImage = "https://i.ibb.co/fCbqJ6Q/sg-Ai-Uj-PU5-RORz-Cf-PAj-QVd-K9spq-QL92cj-Q4-S5-ODmo.jpg"
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.ProductDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CompanyProductId")
                        .HasColumnType("int");

                    b.Property<int>("DonationId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyProductId");

                    b.HasIndex("DonationId");

                    b.ToTable("ProductDonations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            CompanyProductId = 1,
                            DonationId = 1,
                            TotalPrice = 60000
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CompanyProductId = 2,
                            DonationId = 2,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2,
                            CompanyProductId = 7,
                            DonationId = 3,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 4,
                            Amount = 3,
                            CompanyProductId = 5,
                            DonationId = 4,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 5,
                            Amount = 3,
                            CompanyProductId = 11,
                            DonationId = 1,
                            TotalPrice = 90000
                        },
                        new
                        {
                            Id = 6,
                            Amount = 4,
                            CompanyProductId = 15,
                            DonationId = 2,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 7,
                            Amount = 9,
                            CompanyProductId = 17,
                            DonationId = 3,
                            TotalPrice = 679000
                        },
                        new
                        {
                            Id = 8,
                            Amount = 8,
                            CompanyProductId = 20,
                            DonationId = 3,
                            TotalPrice = 98700
                        },
                        new
                        {
                            Id = 9,
                            Amount = 1,
                            CompanyProductId = 29,
                            DonationId = 3,
                            TotalPrice = 7000
                        },
                        new
                        {
                            Id = 10,
                            Amount = 4,
                            CompanyProductId = 33,
                            DonationId = 4,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 11,
                            Amount = 1,
                            CompanyProductId = 31,
                            DonationId = 2,
                            TotalPrice = 101000
                        },
                        new
                        {
                            Id = 12,
                            Amount = 1,
                            CompanyProductId = 34,
                            DonationId = 2,
                            TotalPrice = 70000
                        },
                        new
                        {
                            Id = 13,
                            Amount = 2,
                            CompanyProductId = 22,
                            DonationId = 3,
                            TotalPrice = 97000
                        },
                        new
                        {
                            Id = 14,
                            Amount = 3,
                            CompanyProductId = 26,
                            DonationId = 1,
                            TotalPrice = 120000
                        },
                        new
                        {
                            Id = 15,
                            Amount = 1,
                            CompanyProductId = 19,
                            DonationId = 1,
                            TotalPrice = 70000
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RateNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rates");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Middle",
                            RateNumber = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Good",
                            RateNumber = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Very Good",
                            RateNumber = 5
                        },
                        new
                        {
                            Id = 5,
                            Description = "Super",
                            RateNumber = 7
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlineImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayPal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAccept")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            Email = "lama@test.com",
                            Name = "Lama Boshi",
                            Password = "121",
                            PayPal = "Lb1267",
                            Phone = "0964654765",
                            UserName = "Lamaz",
                            isAccept = true
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            Email = "Hamzeh@test.com",
                            Name = "Hamze Badinjky",
                            Password = "141",
                            PayPal = "Lb1267",
                            Phone = "0964654765",
                            UserName = "hamzehS",
                            isAccept = false
                        },
                        new
                        {
                            Id = 3,
                            Age = 20,
                            Email = "Adam@test.com",
                            Name = "Adam Syria",
                            Password = "161",
                            PayPal = "Lb1267",
                            Phone = "0964654765",
                            UserName = "Adom",
                            isAccept = false
                        });
                });

            modelBuilder.Entity("MarketingSurplus.Models.Bill", b =>
                {
                    b.HasOne("MarketingSurplus.Models.OrderProduct", "OrderProduct")
                        .WithMany("Bills")
                        .HasForeignKey("OrderProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.OrderStatus", "OrderStatus")
                        .WithMany("Bills")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderProduct");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Company", b =>
                {
                    b.HasOne("MarketingSurplus.Models.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyMethods", b =>
                {
                    b.HasOne("MarketingSurplus.Models.Company", "Company")
                        .WithMany("CompanyMethods")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.PayMethod", "PayMethod")
                        .WithMany("CompanyMethods")
                        .HasForeignKey("PayMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("PayMethod");
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyProduct", b =>
                {
                    b.HasOne("MarketingSurplus.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Donation", b =>
                {
                    b.HasOne("MarketingSurplus.Models.Charity", "Charity")
                        .WithMany("Donations")
                        .HasForeignKey("CharityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.OrderType", "OrderType")
                        .WithMany("Donations")
                        .HasForeignKey("OrderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charity");

                    b.Navigation("OrderType");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Evalution", b =>
                {
                    b.HasOne("MarketingSurplus.Models.Rate", "Rate")
                        .WithMany("Evalutions")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.Subscription", "Subscription")
                        .WithMany("Evalutions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rate");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Order", b =>
                {
                    b.HasOne("MarketingSurplus.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderProduct", b =>
                {
                    b.HasOne("MarketingSurplus.Models.CompanyProduct", "CompanyProduct")
                        .WithMany("OrderProducts")
                        .HasForeignKey("CompanyProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyProduct");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MarketingSurplus.Models.ProductDonation", b =>
                {
                    b.HasOne("MarketingSurplus.Models.CompanyProduct", "CompanyProduct")
                        .WithMany("ProductDonations")
                        .HasForeignKey("CompanyProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.Donation", "Donation")
                        .WithMany("ProductDonations")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyProduct");

                    b.Navigation("Donation");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Subscription", b =>
                {
                    b.HasOne("MarketingSurplus.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingSurplus.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Charity", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Company", b =>
                {
                    b.Navigation("CompanyMethods");
                });

            modelBuilder.Entity("MarketingSurplus.Models.CompanyProduct", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("ProductDonations");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Donation", b =>
                {
                    b.Navigation("ProductDonations");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderProduct", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderStatus", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("MarketingSurplus.Models.OrderType", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("MarketingSurplus.Models.PayMethod", b =>
                {
                    b.Navigation("CompanyMethods");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Rate", b =>
                {
                    b.Navigation("Evalutions");
                });

            modelBuilder.Entity("MarketingSurplus.Models.Subscription", b =>
                {
                    b.Navigation("Evalutions");
                });

            modelBuilder.Entity("MarketingSurplus.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
